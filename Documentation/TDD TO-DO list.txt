[x] Money is value object
[x] Money is struct
[x] Money.Zero
[x] Money private constructor
[x] Money ignore decimals
[x] Money factors are private
[x] Money has never negative factors

[ ] Money creates factors on the fly
[ ] Money.From(double.MaxValue) does not fail

[ ] Money{1k}.MaxPrefix == "k"
[ ] Money{999}.MaxPrefix == ""
[ ] Money{1B + 1k}.MaxPrefix == "B"

[ ] Money{1k}.ToString() == "1k"
[ ] Money{1k + 400}.ToString() == "1.4k"
[ ] Money{1k + 450}.ToString() == "1.45k"
[ ] Money{1k + 405}.ToString() == "1.4k"
[ ] Money{100k}.ToString() == "100k"
[ ] Money{100k + 500}.ToString() == "100k"
[ ] Money{100k + 500}.ToString() == "100k"
[ ] Money{100k + 500}.ToString() == Money{100k}.ToString()
[ ] Money.From("10k") == Money{10k}

[x] Money{1} <-> 1.0
[x] Money{1} == Money{1}    (equality operator)
[x] Money{0} == Money.Zero  (equality operator)
 
[x] Money.From(1500) == 1500
[x] Money{1k + 400} == 1400d
[x] Money{1k} + Money{400} <-> 1400.0
[x] Money{1k} + Money{400} == Money{1k + 400}

[x] Money{x} - Money{y} == Money{x-y} (x >= y)
[x] Money{x} - Money{x} == Money.Zero


[x] Money{x} * 0 == Money{0} 

[x] Money.Zero + Money{x} == Money{x} (identity element)
[x] Money{0} * x == Money{0} (absorbing element)

[x] Money{5} * 2 == Money{10}
[x] Money{1} + Money{2} == Money{3}
[x] Money{x} + Money{x} <-> Money{x} * 2
[x] Money{1k + 400} * 2 <-> Money{1k} * 2 + Money{400} * 2 == Money{2k + 800}
[x] Money{1k + 600} * 2 == Money{3k + 200}
 
[x] Money{1k}.Factor() == [Money{1k}]
[x] Money{20M + 2k}.Factor() == [Money{20M}, Money{2k}]

[-] Roundings
