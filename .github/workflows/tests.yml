name: Run Tests

on: [push]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  test:
    name: Tests for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    
    steps:

      - name: Checkout
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Activate license
        uses: MirrorNG/unity-runner@3.1.0
        with:
          entrypoint: /activate.sh

      - name: Generate Solution
        uses: MirrorNG/unity-runner@3.1.0
        with:
          # Arguments to pass to unity
          args: -buildTarget StandaloneWindows64 -customBuildName MirrorNG -customBuildPath ./build/StandaloneWindows64 -projectPath . -executeMethod  UnityEditor.SyncVS.SyncSolution -quit

      - name: Run editor Tests
        uses: MirrorNG/unity-runner@3.1.0
        with:
          args: -runTests -testPlatform editmode -testResults Tests/editmode-results.xml -enableCodeCoverage -coverageResultsPath Tests

      - name: Run play Tests
        uses: MirrorNG/unity-runner@3.1.0
        with:
          args: -runTests -testPlatform playmode -testResults Tests/playmode-results.xml -enableCodeCoverage -coverageResultsPath Tests

      - name: Archive test results as artifacts
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: Test results
          path: Tests

#     - name: Publish test results
#       uses: MirrorNG/nunit-reporter@v1.0.9
#       if: always()
#       with:
#         path: "Tests/*.xml"
#         access-token: ${{ secrets.GITHUB_TOKEN }}